// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  email       String
  username    String        @unique
  password    String
  workflows   Workflow[]
  credentials Credentials[]

  createdAt     DateTime    @default(now())
}

model Workflow {
  id                String               @id @default(auto()) @map("_id") @db.ObjectId
  title             String
  enabled           Boolean
  userId            String               @db.ObjectId
  connections       Json
  Node              Node[]
  worflowExecutions WorkflowExecutions[]

  user    User     @relation(fields: [userId], references: [id])
  webhook Webhook?
}

model Node {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  type           NodeType
  triggerType    TriggerType?
  position       Json
  actionPlatform PLATFORM?
  action         Json?
  data           Json?
  webhook        Webhook?
  workflowId     String       @db.ObjectId
  workflow       Workflow     @relation(fields: [workflowId], references: [id])
}

model Webhook {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  path      String      @unique
  method    HTTP_METHOD
  active    Boolean     @default(true)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  nodeId     String   @unique @db.ObjectId
  node       Node     @relation(fields: [nodeId], references: [id])
  workflowId String   @unique @db.ObjectId
  workflow   Workflow @relation(fields: [workflowId], references: [id])
}

model WorkflowExecutions {
  id         String                  @id @default(auto()) @map("_id") @db.ObjectId
  status     WorkflowExecutionStatus
  startedAt  DateTime                @default(now())
  finishedAt DateTime?

  workflowId String   @db.ObjectId
  workflow   Workflow @relation(fields: [workflowId], references: [id])
}

model Credentials {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  platform  PLATFORM
  data      Json
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AvailableCredentialsApplications {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  icon     String
  platform PLATFORM

  @@unique([name, platform])
}

enum PLATFORM {
  TELEGRAM
  RESEND
}

enum HTTP_METHOD {
  GET
  POST
}

enum NodeType {
  TRIGGER
  ACTION
}

enum TriggerType {
  MANUAL
  WEBHOOK
  CRON
}

enum WorkflowExecutionStatus {
  RUNNING
  SUCCESS
  FAILED
  CANCELLED
}
